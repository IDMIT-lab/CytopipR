% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/7_Clustering.R
\name{reorderClustering}
\alias{reorderClustering}
\title{Reorder Clustering Levels in CYTdata}
\usage{
reorderClustering(CYTdata, clustering, alphabetic = TRUE, newOrder = NULL)
}
\arguments{
\item{CYTdata}{A `CYTdata` object containing the clustering data that will be reordered.}

\item{clustering}{A string specifying the name of the clustering column whose levels are to be reordered.}

\item{alphabetic}{A logical indicating whether the clustering levels should be sorted alphabetically. Default is `TRUE`.}

\item{newOrder}{A character vector specifying a custom order for the clustering levels. This argument is used only if `alphabetic` is set to `FALSE`. If `alphabetic` is `TRUE`, `newOrder` is ignored.}
}
\value{
A `CYTdata` object with the reordered clustering levels.
}
\description{
This function allows you to reorder the levels of a specified clustering column in the `CYTdata` object. The clustering levels can be reordered either alphabetically or based on a custom order provided by the user.
}
\details{
This function allows you to reorder the clustering levels of a specified column in the `cellClustering` dataframe. You can reorder the levels alphabetically (using the `alphabetic` argument) or specify a custom order using the `newOrder` argument.

If `alphabetic` is set to `TRUE`, the clustering levels will be reordered alphabetically. If `alphabetic` is set to `FALSE`, the `newOrder` argument must be provided, and the function will reorder the clustering levels according to the values in `newOrder`. The `newOrder` argument must contain values that are present in the existing clustering levels and must not contain duplicates.

The function performs several checks to ensure the validity of the inputs, including checking if the specified clustering column exists, if the provided custom order is valid, and if the levels contain duplicates.
}
\examples{
# Example 1: Reorder clustering levels alphabetically
CYTdata_corrected <- reorderClustering(CYTdata, clustering = "clusterColumn", alphabetic = TRUE)

# Example 2: Reorder clustering levels based on a custom order
CYTdata_corrected <- reorderClustering(CYTdata, clustering = "clusterColumn", alphabetic = FALSE, newOrder = c("clusterB", "clusterA", "clusterC"))

}
\seealso{
\code{\link{gtools::mixedsort}} for sorting the levels alphabetically while preserving the numeric order.
}
