% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/7_Clustering.R
\name{plotPopulationCounts}
\alias{plotPopulationCounts}
\title{Plot Population Counts by Clustering and Metadata}
\usage{
plotPopulationCounts(
  CYTdata,
  clustering,
  metadata,
  clusters = NULL,
  sort = TRUE,
  samples = NULL
)
}
\arguments{
\item{CYTdata}{An object of class \code{CYTdata}. This should contain cell clustering data in the \code{cellClustering} slot and sample metadata in the \code{sampleMetadata} slot.}

\item{clustering}{A character string specifying the name of the clustering to use. This should match a column name in the \code{cellClustering} slot.}

\item{metadata}{A character string specifying the metadata column name from the \code{sampleMetadata} slot that will be used for coloring the plot.}

\item{clusters}{A vector of cluster identifiers to be included in the plot. If \code{NULL}, all clusters are considered.}

\item{sort}{A logical value indicating whether the clusters should be sorted by their total cell count. Default is \code{TRUE}.}

\item{samples}{A vector of sample identifiers to filter the data. If \code{NULL}, all samples are considered.}
}
\value{
A \code{ggplot} object representing the stacked bar plot.
}
\description{
This function generates a stacked bar plot showing the number of cells per cluster, with colors representing the proportion of a metadata variable. It calculates the number of cells for each cluster, optionally groups them by metadata (e.g., sample groups), and visualizes the results.
}
\details{
The function counts the number of cells per cluster for each sample. It then merges this count with the provided metadata and generates a stacked bar plot showing the count of cells for each cluster, colored by the metadata values. If the \code{sort} parameter is set to \code{TRUE}, the clusters are ordered by their total cell count in descending order.

The plot provides a visual representation of the population distribution of cells within each cluster and how it relates to the metadata variable.
}
\examples{
# Example usage
plot <- plotPopulationCounts(CYTdata = CYTdata,
                             clustering = "SampleClustering",
                             metadata = "TreatmentGroup",
                             sort = TRUE)
print(plot)

}
