% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/7_Clustering.R
\name{renameClustering}
\alias{renameClustering}
\title{Rename Clustering Columns or Cluster IDs in CYTdata}
\usage{
renameClustering(CYTdata, clustering = NULL, merge = TRUE, from = NULL, to)
}
\arguments{
\item{CYTdata}{A CYTdata object containing the clustering data to be renamed.}

\item{clustering}{A string specifying the name of the clustering column to rename cluster IDs (optional). If `NULL`, the function will rename the clustering column names instead.}

\item{merge}{A logical indicating whether duplicated clustering levels should be merged if they share the same name after renaming. Default is `TRUE`.}

\item{from}{A character vector of clustering names to be renamed (either column names or cluster IDs).}

\item{to}{A character vector of new names for the clustering columns or cluster IDs.}
}
\value{
A CYTdata object with renamed clustering columns or cluster IDs.
}
\description{
This function allows you to rename clustering column names or the cluster IDs in a `CYTdata` object. Depending on the input, it can either rename the column names of clustering data or rename the individual cluster IDs (levels) within a specified clustering column. Optionally, duplicate cluster levels can be merged if necessary.
}
\details{
This function performs two operations depending on the provided parameters:
1. **Renaming clustering columns**: If the `clustering` argument is `NULL`, the function will rename the columns of the `cellClustering` dataframe. The `from` argument should contain the existing column names, and `to` should contain the new column names. The lengths of `from` and `to` must be equal.
2. **Renaming cluster IDs**: If the `clustering` argument is specified, the function renames the cluster IDs within that column. The `from` argument contains the old cluster IDs, and the `to` argument contains the new names for those clusters. If the new names result in duplicate clusters, the `merge` argument controls whether the duplicates should be merged.

The function checks for various errors, such as mismatched lengths between `from` and `to`, missing or duplicated names, and invalid clustering names or IDs.
}
\examples{
# Example 1: Rename clustering columns
CYTdata_corrected <- renameClustering(CYTdata, from = c("oldClust1", "oldClust2"), to = c("newClust1", "newClust2"))

# Example 2: Rename cluster IDs within a specific clustering column
CYTdata_corrected <- renameClustering(CYTdata, clustering = "clusterColumn", from = c("clusterA", "clusterB"), to = c("clusterX", "clusterY"))

# Example 3: Merge duplicated cluster IDs after renaming
CYTdata_corrected <- renameClustering(CYTdata, clustering = "clusterColumn", from = c("clusterA", "clusterB"), to = c("clusterA", "clusterA"), merge = TRUE)

}
\seealso{
\code{\link{plyr::mapvalues}} for mapping old values to new values.
}
