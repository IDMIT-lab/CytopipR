% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/7_Clustering.R
\name{runClustering}
\alias{runClustering}
\title{Perform Clustering on CYTdata}
\usage{
runClustering(
  CYTdata,
  name,
  addPrefix = "C",
  clusterWith = c("markers", "DimRed"),
  markers = NULL,
  DimRed = NULL,
  clusterBy = c("cell", "clustering"),
  clustering = NULL,
  typeScaling = c("none", "center", "reduced", "center_reduced", "rescale_min_max"),
  rescaleQt = c(0.05, 0.95),
  rescaleBorders = c(0, 1),
  scaleByMetadata = NULL,
  typeMSI = c("median", "mean"),
  type = c("SOM", "FlowSOM", "Phenograph", "Hierarchical", "ConsensusHierarchical",
    "Spade", "DBSCAN", "Kmeans", "Kmedoids", "CLARA", "PhenoGMM", "Mean_shift",
    "flowMeans"),
  checkOverwrite = TRUE,
  seed = 42,
  ...
)
}
\arguments{
\item{CYTdata}{A `CYTdata` object containing the data to be clustered, including cell expression data, clustering data, and sample data.}

\item{name}{A string specifying the name to assign to the resulting clustering.}

\item{addPrefix}{A string prefix to prepend to each cluster label. Defaults to `"C"`.}

\item{clusterWith}{A string specifying whether to perform clustering based on "markers" or "DimRed" (dimensionality reduction). Defaults to "markers".}

\item{markers}{A vector of marker names used for clustering when `clusterWith = "markers"`. This is optional.}

\item{DimRed}{A string specifying the name of the dimensionality reduction method used for clustering when `clusterWith = "DimRed"`. This is optional.}

\item{clusterBy}{A string specifying whether to cluster by "cell" or by existing "clustering". Defaults to "cell".}

\item{clustering}{A string specifying the clustering column to use when `clusterBy = "clustering"`. This is optional.}

\item{typeScaling}{A string specifying the type of scaling to apply to the data before clustering. Options include:
- `"none"`: No scaling
- `"center"`: Center the data
- `"reduced"`: Apply reduced scaling
- `"center_reduced"`: Apply center and reduced scaling
- `"rescale_min_max"`: Rescale data to min-max scale
Defaults to `"none"`.}

\item{rescaleQt}{A numeric vector of length 2 specifying the quantiles for rescaling. Defaults to `c(0.05, 0.95)`.}

\item{rescaleBorders}{A numeric vector of length 2 specifying the borders for rescaling. Defaults to `c(0, 1)`.}

\item{scaleByMetadata}{A string specifying a sample metadata column to scale by. Defaults to `NULL`, indicating no scaling by metadata.}

\item{typeMSI}{A string specifying whether to compute MSI using the `"mean"` or `"median"` method. Defaults to `"median"`.}

\item{type}{A string specifying the clustering algorithm to use. Options include:
- `"SOM"`
- `"FlowSOM"`
- `"Phenograph"`
- `"Hierarchical"`
- `"ConsensusHierarchical"`
- `"Spade"`
- `"DBSCAN"`
- `"Kmeans"`
- `"Kmedoids"`
- `"CLARA"`
- `"PhenoGMM"`
- `"Mean_shift"`
- `"flowMeans"`
Defaults to `"SOM"`.}

\item{checkOverwrite}{A boolean indicating whether to check if the clustering already exists. If `TRUE`, will ask the user whether to overwrite the clustering. Defaults to `TRUE`.}

\item{seed}{A numeric value to set the random seed for reproducibility. Defaults to 42.}

\item{...}{Additional arguments passed to the clustering algorithms. These arguments are passed to the specific clustering functions (e.g., `kohonen::som()`, `FlowSOM::FlowSOM()`, `stats::kmeans()`, etc.).
  - **For SOM (`"SOM"`)**, additional arguments for the function `kohonen::som` include:
    - `grid`: A `som.grid` object specifying the grid structure (e.g., a 2D grid).
    - `rlen`: The number of learning iterations.
    - `toroidal`: A boolean to specify whether the map should be toroidal.
    - `alpha`: The learning rate.
    - `radius`: The radius of influence of the neighboring units in the map.
    - **Documentation**: [kohonen::som](https://cran.r-project.org/web/packages/kohonen/kohonen.pdf)

  - **For FlowSOM (`"FlowSOM"`)**, additional arguments for the function `FlowSOM::FlowSOM` include:
    - `colsToUse`: A vector of column names to use for clustering.
    - `xdim`, `ydim`: The dimensions of the grid (e.g., number of rows and columns).
    - `maxNumberOfClusters`: The maximum number of clusters to generate.
    - `seed`: The seed for random number generation.
    - `normalize`: Logical value indicating if normalization should be applied before clustering.
    - **Documentation**: [FlowSOM::FlowSOM](https://cran.r-project.org/web/packages/FlowSOM/FlowSOM.pdf)

  - **For K-means (`"Kmeans"`)**, additional arguments for the function `stats::kmeans` include:
    - `centers`: The number of clusters or initial centroids.
    - `nstart`: The number of random starts to use.
    - `iter.max`: The maximum number of iterations.
    - `algorithm`: The algorithm to use (e.g., `"Lloyd"`, `"Forgy"`).
    - **Documentation**: [stats::kmeans](https://www.rdocumentation.org/packages/stats)

  - **For DBSCAN (`"DBSCAN"`)**, additional arguments for the function `dbscan::dbscan` include:
    - `eps`: The maximum distance between two points for them to be considered as in the same neighborhood.
    - `minPts`: The minimum number of points required to form a dense region.
    - **Documentation**: [dbscan::dbscan](https://cran.r-project.org/web/packages/dbscan/dbscan.pdf)

  - **For Phenograph (`"Phenograph"`)**, additional arguments for the function `cytofkit2::Rphenograph` include:
    - `k`: The number of nearest neighbors to use.
    - `ncpus`: The number of CPUs to use for parallel processing.
    - **Documentation**: [cytofkit2::Rphenograph](https://cran.r-project.org/web/packages/cytofkit2/cytofkit2.pdf)

  - **For CLARA (`"CLARA"`)**, additional arguments for the function `cluster::clara` include:
    - `k`: The number of clusters to form.
    - `samples`: The number of samples to randomly select from the data (used for faster clustering).
    - `metric`: The distance measure used to calculate distances between observations.
    - **Documentation**: [cluster::clara](https://cran.r-project.org/web/packages/cluster/cluster.pdf)

  - **For Kmedoids (`"Kmedoids"`)**, additional arguments for the function `cluster::pam` (used for K-medoids) include:
    - `k`: The number of clusters to form.
    - `metric`: The distance metric to use.
    - `clustering`: A logical value indicating whether to compute the clustering.
    - **Documentation**: [cluster::pam](https://cran.r-project.org/web/packages/cluster/cluster.pdf)}
}
\value{
A list containing:
  - `"CYTdata"`: The updated `CYTdata` object with the new clustering added.
  - `"opts"`: A list of options and objects related to the clustering process.
}
\description{
This function performs clustering on the given CYTdata object using a variety of clustering algorithms. It allows clustering based on either markers or dimensionality reduction (DimRed) data and supports multiple clustering methods such as SOM, FlowSOM, KMeans, DBSCAN, and more. The function also provides options to preprocess the data using scaling and MSI computation before performing clustering.
}
\details{
This function performs clustering on the data contained in the `CYTdata` object. The user can choose to cluster based on either marker expression or dimensionality reduction data. It supports a variety of clustering algorithms and provides options for scaling and MSI computation. The function also checks if a clustering with the specified name already exists and prompts the user to overwrite it if necessary.

Clustering algorithms available include:
- SOM (Self-Organizing Maps)
- FlowSOM
- Phenograph
- Hierarchical
- DBSCAN (Density-Based Spatial Clustering)
- K-means
- K-medoids (PAM)
- CLARA (Clustering Large Applications)
- and others.
}
\examples{
# Example: Perform clustering using K-means on markers data
result = runClustering(CYTdata, name = "Kmeans_clustering", type = "Kmeans", clusterWith = "markers", markers = c("marker1", "marker2"))

# Example: Perform clustering using DBSCAN on DimRed data
result = runClustering(CYTdata, name = "DBSCAN_clustering", type = "DBSCAN", clusterWith = "DimRed", DimRed = "PCA")

}
\seealso{
\code{\link{computeMSI}} for computing MSI before clustering.
}
